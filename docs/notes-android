Android Notes

* ABOUT  - <2020-04-05 Sun 15:22> - Sample code ~/share/notes/wifip2p1.java for WifiP2P.

* ABOUT  - <2020-04-01 Wed 10:38> - jetpack - androidx - run into these all the time. Old code can be upgraded. Again, the fast changing landscpae of google . Searching thru project, find over 30 occurences of androidx. In gradle scripts and code. 

* DID WORK  - <2020-03-26 Thu 12:42> - Finally found a successful way to stream the camera on JE's old Samsung. Using /disk2/androidprojects/rtmp-rtsp-stream-client-java/ . On the pc, using Nginx rtmp plugin. See [[file:notes-ubuntu::*-%20<2020-03-24%20Tue%2019:41>-%20<2020-03-24%20Tue%2019:36>%20-%20nginx%20-%20to%20work][- notes-ubuntu]] . Source for Android project is from  https://github.com/pedroSG94/rtmp-rtsp-stream-client-java . 
*** TODO  - <2020-03-27 Fri 12:54> - Get https://github.com/pedroSG94/RTSP-Server - . 


* UPDATE  - <2020-03-26 Thu 10:20> - WebRTC - this is a VERY VERY space hog, and can't see any way to make it work easily for android. Created the directory mentioned below and cloned depot_tools. Way too google.
*** DID NOT WORK  - <2020-03-26 Thu 12:11>see /disk2/webRTC/samples , this might allow putting a page with video up from android on the web. A technique using http, rather than rtmp . - 
*** DID NOT WORK  - <2020-03-26 Thu 11:29>- <2020-03-26 Thu 10:23> - Test it from laptop, see if laptop camera will show to browser in phone. - 
*** TODO  - <2020-03-26 Thu 11:29> - Downloaded /disk2/depot_tools -  http://webrtc.github.io/webrtc-org/native-code/development/prerequisite-sw/ . 

* CHECK  - <2020-03-15 Sun 15:35> - Downloaded a lot of examples from https://android.googlesource.com/platform/development/+/master/samples in /disk2/androidprojects/google-examples

* ABOUT  - <2020-03-14 Sat 16:10> - fragments - A fragment is an Android component that holds part of the behavior and/or UI of an activity. They can be avoided. 

* PROCESS  - <2020-03-14 Sat 13:17> - p2p -  https://developer.android.com/guide/topics/connectivity/wifip2p :P2P:
*** TODO  - <2020-03-22 Sun 18:01> - Have created /disk2/androidprojects/BasicActivity and copied it to /disk2/androidprojects/WifiP2P2 where I'll use previous code to see if I can get somewhere with this shit.
***** UPDATE  - <2020-03-23 Mon 17:47> - Created /disk2/androidprojects/WifiP2P2 and am copying stuff piece by piece. Lot in the Basic Activity template that is new to me. 
******* ITEM  - <2020-03-23 Mon 17:48> - <include layout="@layout/content_main" /> in [[/disk2/androidprojects/WifiP2P2/app/src/main/res/layout/activity_main.xml][activity_main.xml]]  - caused an error, that led to [[/disk2/androidprojects/WifiP2P2/app/build.gradle][build.gradle (app)]] where dependencies for navigation had to be included.
*** ITEM  - <2020-03-21 Sat 11:35> - https://developer.android.com/guide/topics/connectivity/wifip2p
*** ITEM  - <2020-03-21 Sat 11:31> - The source for /home/rick/AndroidStudioProjects/WifiP2PJava, sort of incomplete: https://www.tutorialspoint.com/how-to-use-wifi-direct-on-android
*** NOTE  - <2020-03-14 Sat 13:41> - The google api called Nearby is NOT p2p. Being google, it could disappear quickly.
*** ENTRY  - <2020-03-14 Sat 13:18> - Methods that allow you to discover, request, and connect to peers are defined in the [[https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager][WifiP2pManager]] class. 

* ABOUT  - <2020-03-07 Sat 16:34> - scrcpy - view android screen via adb bridge. :SCRCPY:
*** HOWTO  - <2020-03-08 Sun 13:20> - USB is plug in and run scrcpy. Via network, need to be on the same LAN, then use ip address of device to setup connection using the following cmds in laptop:
***** 1  - <2020-03-08 Sun 13:20> - adb tcpip 5555
***** 2  - <2020-03-08 Sun 13:23> - adb connect 172.20.204.29:5555 (assuming correct ip address).
***** 3  - <2020-03-08 Sun 13:24> - scrcpy

* ABOUT  - <2020-03-08 Sun 11:21> - Find my phone - https://www.google.com/android/find?hl=en&u=0 . Lists all registered phones.

* ABOUT - <2019-08-26 Mon 09:20> - Sensors - https://developer.android.com/guide/topics/sensors/sensors_overview

* ABOUT - <2019-07-18 Thu 14:02> - Where the camera pictures images are: /DCIM/Camera

* CHECK - <2019-06-06 Thu 10:05> - [[https://www.getdroidtips.com/twrp-recovery-t-mobile-lg-v20/][Steps to Install TWRP Recovery on T-Mobile LG V20]] - and using SuperSU. And [[https://www.getdroidtips.com/root-install-twrp-recovery-lg-v20-h918/][How To Root And Install TWRP Recovery On LG V2]] . And [[https://www.getdroidtips.com/custom-rom-lg-v20/][List of Best Custom ROM for LG V20 {All Variant]]. 

* SOLVED - <2019-03-29 Fri 12:53> - Getting OsmAnd installed with maps on SD card - Used ES File Explorer with the apk file on the SD card, and it let me choose the SD card for storage of maps. When installed with the other file explorer, it didn't. Go Figure!

* ABOUT - <2019-02-28 Thu 12:42> - Downloaded the device locator app, /disk2/androidprojects/device-locator - can send phone message with it's pw and Send location as message. :DEVICE_LOCATOR:
*** UPDATE  - <2020-02-25 Tue 17:03> - Works with my LV20 and JE's. 7734 Send location and 5452 for JE's.
*** DID WORK - <2019-02-28 Thu 12:43> - sent a9392 Send location to ZTE, got coords back, but message didn't put them on the map. 
*** UPDATE - <2019-02-28 Thu 12:46> - installed on JE's Samsung, pw is 5cd94. sending msg works there too.
* NOTE - <2019-02-24 Sun 15:46> - The development environment is very confusing, overdone, and incredibly spagehtti. Think I'll withdraw from this. Get into something else. Any ideas?
*** UPDATE - <2019-02-25 Mon 18:08> - Back at it, had to at least get ScrabbleScorer5 working again. This is an environment for display on smaller than laptop, waiting for Linux to totally take over this domain, Android has too much capitalist baggage.

* CHECK - <2019-02-24 Sun 14:08> - The problem of source code and bytecode being out of sync for debug, turn off instant run in Settings / Build Execution Deployment. (not enough). Right side Gradle menu, right click, refresh project on all of them. nothing. Deleted all the ~/.gradle/cache files and no it won't even run propertly. Android is flaky. No doubt about it. Should I even continue?

* CHECK - <2019-02-22 Fri 09:51> - Work through some more examples, 
*** CHECK - <2019-02-24 Sun 11:07> - https://github.com/googlesamples - tons of samples. Many are already in /disk2/androidprojects/.
***** ABOUT - <2019-02-24 Sun 14:04> - /disk2/androidprojects/android-WifiRttScan/ doesn't seem to even build. 
******* DID NOT WORK - <2019-02-24 Sun 14:45> - Another one that simply doesn't work. 
***** ABOUT - <2019-02-24 Sun 11:28> - [[/disk2/androidprojects/android-nearby/connections/rockpaperscissors/README.md][rock-paper-scissors]] android to android comm. Need 2 or more devices.
***** ABOUT - <2019-02-24 Sun 11:32> - [[/disk2/androidprojects/android-nearby/connections/walkietalkie/README.md][walkie-talkie]] broadcast audio from one to many.
*** CHECK - <2019-02-23 Sat 12:49>there are some github examples suggested by [[https://techbeacon.com/app-dev-testing/how-master-android-what-developers-can-learn-21-apps][How to master Android: What developers can learn from 21 apps]] . 
***** CHECK - <2019-02-22 Fri 09:59> - /disk2/androidprojects/MLManager - looks interesting...
******* UPDATE - <2019-02-24 Sun 11:07> - Lots of unusual features, like flavors.
******* UPDATE - <2019-02-26 Tue 10:24> - [[/home/rick/.gradle/caches/modules-2/files-2.1/com.google.auto.value/auto-value/1.1/f6951c141ea3e89c0f8b01da16834880a1ebf162][file location]] of auto-value-1.1.jar - a Annotation processors must be explicitly declared now.  The following dependencies on the compile classpath are found to contain annotation processor.  Please add them to the annotationProcessor configuration. - auto-value-1.1.jar (com.google.auto.value:auto-value:1.1)

* CHECK - <2019-02-09 Sat 09:23> - Check out Kotlin. It's being pushed by Google and I'm not in love with java. Or C++. Python maybe, but it doesn't work here. A simpler more block headed language seems to work for me.
*** This is a star without a heading. Is it still in the index?

* TODO - <2019-02-04 Mon 08:04> - Develop a ScrabbleScorer app. 
*** DID NOT WORK - <2019-02-24 Sun 15:44> - Borken again! I didn't change anything in the project, but it is broken agian. Google really puts out some crappy shit. 
*** PROCESS - <2019-02-04 Mon 08:04> - Discovered /disk2/androidprojects/09Keyboard1 - This is a working hex keyboard example. The only working example I found! Copied project to /disk2/androidprojects/ScrabbleScorer4.
***** HOWTO - <2019-02-05 Tue 14:06> - Draw a horizontal or vertical line - use an xml shape file and an ImageView to display it. These and other shapes are from a Polish developer's blog, see [[https://android-dev-examples.blogspot.com/2014/08/android-shape-line.html?showComment=1549405736938#c7392760593496643228][This url.]]  
***** NOTE - <2019-02-05 Tue 09:36> - [[/disk2/androidprojects/ScrabbleScorer4/app/src/main/res/xml/hexkbd.xml][The XML Keyboard description file.]] 
***** FIXED  - <2019-02-05 Tue 09:36>- <2019-02-04 Mon 08:29> - Need to trim down the key board to a 4 by 3: [(1,2,3),(4,5,6),(7,8,9)(clr-all,0,clear-one)]. This is done in  - 
******* NOTE - <2019-02-05 Tue 09:31> - Changed clr-all to a minus sign. Only 1 or 2 digits, no need for more than clear-one twice used.
***** UPDATE - <2019-02-06 Wed 20:09> - All effort has been at understanding the layout, views, and Shapes. Trying to get the horizontal and vertical lines to work, and the interaction of the ImageView, a real tangle.
***** NOTE - <2019-02-07 Thu 17:10> - I restarted the project in ScrabbleScorer5, using Constraintlayout.
***** UPDATE - <2019-02-07 Thu 17:08> - TextView.setText("txt") is what you need for the activeValue TextView.
***** UPDATE - <2019-02-09 Sat 09:21> - General observation - you may have to do a lot more in code than xml to place the layout objects so they look good on different screens, and there is the issue of the android level that is supported. Many of the coolest newest features are not available on older rigs. 
***** UPDATE - <2019-02-10 Sun 10:36> - The line drawables were causing the layout trouble. Some sort of visual seperation seems necessary though.
***** UPDATE - <2019-02-10 Sun 19:06> - Have a rudimentary menu in place, and need to look at the sqlite project just downloaded.
***** UPDATE - <2019-02-11 Mon 17:42> - /disk2/androidprojects/sql/Sqltest1 has code that creates and exports to pc reachable space the db. [[https://www.techrepublic.com/blog/software-engineer/export-sqlite-data-from-your-android-device/][external source]] .
***** UPDATE - <2019-02-12 Tue 18:03> - Have the Start new game and list game in menu, need to get a list view of some sort to see the scores that led up to now. Also, need to get the db involved to record and report the scores. Design schema. Note the changes in the manifest file to accomadate new activities. Each activity has to have a line in the manifest. This is all still in /disk2/androidprojects/ScrabbleScorer5.
***** UPDATE - <2019-02-13 Wed 13:10> - Right now the /disk2/androidprojects/sql/Sqltest1 has the code to move an internal db to external storage. (Other way, from external to internal?). /disk2/androidprojects/sql/SQLite has code for Notes Sqlite app. Defining the tables, GameTop and gameplay. See ~/share/sqlitedbs/ScrabbleGames.sql.
***** UPDATE - <2019-02-16 Sat 08:56> - Migrating the db code into /disk2/androidprojects/ScrabbleScorer5 . Some issues with versioning, to do with datetime stuff? 
***** UPDATE - <2019-02-17 Sun 12:42> - Getting the ListView for the DB records. Found a clear example on [[https://www.raywenderlich.com/995-android-gridview-tutorial][site]] . Project is in /disk2/androidprojects/BabyBookcase/ . I chopped this up a bit, consult  [[https://www.raywenderlich.com/995-android-gridview-tutorial][site]] . Took out the ImageViews, and made each row 1 column.
***** UPDATE - <2019-02-18 Mon 19:53> - Trying to get the list of game showing is being a nightmare. HAve to use listview. No real examples so far. Cobbling stuff together, prretty unorderly right now, latest addition - /disk2/androidprojects/ScrabbleScorer5/app/src/main/res/layout/gamelistlayout.xml
***** UPDATE - <2019-02-19 Tue 10:08> - Going back to the CursorAdapter, it inflates the views that correspond to the fields being grabbed from the db, in this case, playnumber, player, and points. 
******* DID WORK - <2019-02-21 Thu 12:34>- <2019-02-19 Tue 10:20> - I have 2 layout files that could be used for the layout of the view for the list of the game, eah player with their points on each move. The 2 layouts are [[/disk2/androidprojects/ScrabbleScorer5/app/src/main/res/layout/gridview_gamelayout.xml][Grid View]] and [[/disk2/androidprojects/ScrabbleScorer5/app/src/main/res/layout/listview_gamelayout.xml][List View]] .  - 
CLOSED: [2019-02-21 Thu 12:34]
***** UPDATE - <2019-02-21 Thu 12:34> - The ability to export the db is on the menu and working. Found some info about importing a db in, [[https://blog.reigndesign.com/blog/using-your-own-sqlite-database-in-android-applications/][site]] . Now need to export the app, and have it ready to go.
******* HOWTO - <2019-02-21 Thu 12:54> - Create a release candidate, choose Build/Build Variant and then release. The apks are in  /disk2/androidprojects/ScrabbleScorer5/app/build/outputs/apk/release , the debug is one dir up and over. The certificate required didn't get installed.
***** UPDATE - <2019-02-21 Thu 16:37> - generating and using RSA key. I had to revert to Java 8. JDK9 kept getting errors. Below are the commands.
******* keytool -genkey -v -keystore ricks.keystore -alias rick1 -keyalg RSA -keysize 2048 -validity 10000
******* jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore ricks.keystore app-release-unsigned.apk rick1
***** UPDATE - <2019-02-22 Fri 08:45> - After the key fiasco of yesterday, realize that android is a complex entity and I need to know more about Gradle and Keys before I can get any further.
******* DID WORK - <2019-02-23 Sat 11:30>- <2019-02-22 Fri 10:37> - Problem inflating the main layout, and androidx.ConstraintLayout monster. Also using a deprected class. Need to put -Xlint:deprecation as compile flag. Added the whole gradle.projectsEvaluated section in [[/disk2/androidprojects/ScrabbleScorer5/build.gradle]] .  - 
CLOSED: [2019-02-23 Sat 11:30]
******* SOLVED - <2019-02-22 Fri 15:43> - Got it to work, jacked around all kinds of Build Configuration items, File/Sync prject with Gradle, File/Sync with file system, clean, rebuild, make.
******* CHECK - <2019-02-22 Fri 15:45> - list game window is not aligned properly on top. 
********* NOTE - <2019-02-23 Sat 11:29> - It looks different on my display from the emulator.
******* UPDATE - <2019-02-25 Mon 18:07> - It's working, but the lineup on the lsit screen is all fuped, the top isn't responding to the constraints.
***** UPDATE - <2019-02-28 Thu 11:18> - Doing the key generation, key is going into /disk2/androidprojects/ScrabbleScorer5/app/scrabble5.jks, alias is upload, 1st pw is 4Scrabble (used for both), Org. unit is coding, org is whatever, Box Elder, South Dakota, US.
******* DID WORK - <2019-02-28 Thu 12:14> - Got it to install on JE phone, not on mine. The app-release is in the top androidprojects.
CLOSED: [2019-02-28 Thu 12:14]



* REFERENCES - <2019-01-31 Thu 12:25> - Downloaded SDK docs - file:///home/rick/Android/Sdk/docs/reference/packages.html - There are other specific areas of documentation in that dir - ~/Android/Sdk/docs/ . Because the search doesn't seem to work, file:///home/rick/Android/Sdk/docs/reference/classes.html is easier to find class defs.

* REFERENCES - <2019-02-01 Fri 08:40> - [[https://google-developer-training.github.io/android-developer-fundamentals-course-concepts-v2/][Google Developer Training]] - goes through a whole lot of examples.

* ABOUT  - <2020-03-02 Mon 15:45> - architecture - specifically the parts that make up a working app and their relations. :PROGRAM_ARCHITECTURE:
*** ENTRY  - <2020-03-02 Mon 16:19> - AndroidManifest.xml - Your app must declare all its components in this file, which must be at the root of the app project directory.
***** NOTE  - <2020-03-02 Mon 16:22> - Activities, services, and content providers that you include in your source but do not declare in the manifest are not visible to the system and, consequently, can never run.  However, broadcast receivers can be either declared in the manifest or created dynamically in code as BroadcastReceiver objects and registered with the system by calling registerReceiver().
*** ENTRY  - <2020-03-02 Mon 16:08> - There is no one entry point into an app. Another app can start a component in it. To activate a component in another app, deliver a message to the system that specifies your intent to start a particular component. The system then activates the component for you.
*** ABOUT  - <2020-03-02 Mon 16:05> - content providers -  manage a shared set of app data that you can store in the file system, in a SQLite database, on the web, or on any other persistent storage location that your app can access. Through the content provider, other apps can query or modify the data if the content provider allows it.
*** ABOUT  - <2020-03-02 Mon 15:57> - broadcast receivers - components that enable the system to deliver events to the app outside of a regular user flow, allowing the app to respond to system-wide broadcast announcements. Because broadcast receivers are another well-defined entry into the app, the system can deliver broadcasts even to apps that aren't currently running.
*** ABOUT  - <2020-03-02 Mon 15:48> - activities -  the entry point for interacting with the user. It represents a single screen with a user interface. They can be prigrammed to be usable by other programs.
***** NOTE  - <2020-03-02 Mon 18:02> - Most of an app’s core functionality is implemented in the onResume() method. There are numerous callbacks in an activities lifetime.
*** ABOUT  - <2020-03-02 Mon 15:51> - services - provide a general-purpose entry point for keeping an app running in the background for all kinds of reasons. It is a component that runs in the background to perform long-running operations or to perform work for remote processes. A service does not provide a user interface.
*** ABOUT  - <2020-03-02 Mon 16:15> - intents - Three of the four component types—activities, services, and broadcast receivers—are activated by an asynchronous message called an intent. Intents bind individual components to each other at runtime. You can think of them as the messengers that request an action from other components, whether the component belongs to your app or another. 
***** NOTE  - <2020-03-02 Mon 16:24> - activities, services, and broadcast receivers can be started by explicitly naming the target component (using the component class name) in the intent. You can also use an implicit intent, which describes the type of action to perform and, optionally, the data upon which you’d like to perform the action. The implicit intent allows the system to find a component on the device that can perform the action and start it. If there are multiple components that can perform the action described by the intent, the user selects which one to use.
*** NOTE  - <2020-03-02 Mon 16:16> - content providers are activated when targeted by a request from a ContentResolver, not an intent(?)
*** ABOUT - <2019-02-05 Tue 09:38> - resources - files in the res directory of the project is an xml description of a View, or other resource. A layout resource defines the architecture for the UI in an Activity or a component of a UI. [[file:~/Android/Sdk/docs/guide/topics/resources/overview.html][Local doc from the top]] ,  [[https://developer.android.com/guide/topics/resources/layout-resource][Web doc]] , 

* TODO - <2019-02-02 Sat 22:47> - https://constraintlayout.com/basics/guidelines.html

* ABOUT - <2019-02-01 Fri 09:03> - Google is generally a big pain in the ass. They change things constantly, what worked yesterday may not work today. A very tangled mess. Do I want to devote much time to this?
*** ABOUT - <2019-02-01 Fri 18:25> - This layout stuff is rediculous. See 



* TODO - <2019-01-31 Thu 12:50> - The local documentation has been downloaded. Getting AndroidStudio to use it evidently requires some tweaking. [[https://stackoverflow.com/questions/42893969/how-to-use-android-sdk-documentation-offline/43005110#43005110][StackOverflow]] article suggests changing a config file, ~/.AndroidStudio3.3/config/options/jdk.table.xml . The entry for javadocPath. 

* FINISHED - <2019-01-31 Thu 13:54>- <2019-01-31 Thu 11:27> - Finish the intro sample program https://developer.android.com/training/basics/firstapp/building-ui . In ~/AndroidStudioProjects/MyApplication/ is where it is.  - 

* CHECK - <2019-01-29 Tue 14:37> - There are a whole bunch of examples at https://github.com/googlesamples . Lots of them downloaded to /disk2/androidprojects/ . 

* ABOUT - <2019-01-28 Mon 15:47> - Android Application Fundamentals - [[https://developer.android.com/guide/components/fundamentals][websource]] 
*** NOTE - <2019-01-28 Mon 15:50> - The Android operating system is a multi-user Linux system in which each app is a different user. By default, the system assigns each app a unique Linux user ID (the ID is used only by the system and is unknown to the app). The system sets permissions for all the files in an app so that only the user ID assigned to that app can access them. Each process has its own virtual machine (VM), so an app's code runs in isolation from other apps. By default, every app runs in its own Linux process. The Android system starts the process when any of the app's components need to be executed, and then shuts down the process when it's no longer needed or when the system must recover memory for other apps.
*** ABOUT - <2019-01-28 Mon 15:48> - App components - There are four different types of app components:
***** 1 - <2019-01-28 Mon 15:53> - Activity - the entry point for interacting with the user. It represents a single screen with a user interface. 
***** 2 - <2019-01-28 Mon 15:53> - Service - does not provide a user interface, runs in the background to perform long-running operations or to perform work for remote processes
***** 3 - <2019-01-28 Mon 15:53> - Broadcast receivers
***** 3 - <2019-01-28 Mon 15:53> - Content providers



* TODO - <2018-04-25 Wed 16:02> - Tracking and recording points of interest are my biggest uses at least in the US. trying OSM Tracker. OsmAnd would be great If I can ever get it going again.
*** UPDATE - <2018-04-27 Fri 15:36> - I bought it for the phone. So have the + version.

* ABOUT - <2018-04-25 Wed 16:04> - Navigation - Even Mexico is pretty easy if you can get Google. If not, back to Osmand, which isn't even installing on my phone and has had other difficulties. Try the APK, see if that works. - 

* TODO - <2018-04-06 Fri 18:08> - My Osmand on RCA10 decided it had to start all over again when I took away all its Favourites. WTF? Trying to get it to put itself in a certain place is a nightmare, because the naming conventions on adroid are SO fucked up. Had to connect to internet and download world file, and AZ, then putting them in /osmand. (/storage/sdcard0/osmand to osmand). 

* ABOUT - <2017-09-09 Sat 13:56> - Installed Android Studio on XPS13, /home/rick/Android/Sdk is where the sdk is, /home/rick/share/android-studio/bin/studio.sh is where executable studio is. Projects are in ~/share/AndroidProjects.
*** ABOUT - <2017-09-09 Sat 14:46> - To get the emulator to run, had to link a different ~/Android/Sdk/emulator/lib64/libstdc++. Then the emulator worked. Thanks to https://stackoverflow.com/questions/42831999/android-studio-2-3-ubuntu-16-10-emulator-do-not-start

* ABOUT - <2017-06-16 Fri 13:25> - RCA11 - currently running Android 5, but don't expect updates from the RCA types.
*** HOWTO - <2017-06-16 Fri 13:28> - I was trying to find the mysteriously specified "file system" locations. Look like a directory tree but evidently a huge bunch of partitions. So, I used termux, a comd line interface tool, to do cd, ls, pwd, etc to locate mysterious locations. 

* ABOUT - <2017-06-16 Fri 13:26> - RCA10" - system is too old to mess with. Osmand~ upgrade to 2.63 doesn't run on it. Fine for many things though.
*** NOTE - <2017-05-30 Tue 11:16> - The RCA10 is running Android 4.2.2

* UPDATE - <2019-01-24 Thu 15:18>- <2015-09-13 Sun 17:16> - Android Studio - androidstudio - ~/share/scripts/androidstudio /share/android-studio/bin $ ./studio.sh - This is the Adroid Studio downloaded from http://developer.android.com/sdk/index.html - :androidstudio: - :ANDROID_STUDIO:
*** ITEM  - <2020-04-03 Fri 13:47> - Ctrl-Shft-M to move to matching brace, Ctrl-{ Ctrl-} to matching open matching close respectively.
*** NOTE  - <2020-04-03 Fri 13:31> - Editing a file hit Alt-F1 to navigate to the file in other windows, like project view, etc. 
*** NOTE  - <2020-04-03 Fri 13:25> - All the text in button was capitalized. In the <Button entry in put android:textAllCaps="false" . 
*** NOTE  - <2020-04-03 Fri 13:21> - To close find bar open at top of file, hit ESC.
*** ITEM  - <2020-04-02 Thu 11:31> - ~/.gradle - this is where studio downloads all the gradle< distributions. 
*** NOTE  - <2020-04-02 Thu 09:12> - The complexity of the tool is a bit frustrating, having a preference for simplicity.
*** HOWTO  - <2020-03-21 Sat 13:40> - Get rid of search or find bar that is in the top, hit ESC a few times.
*** HOWTO  - <2020-03-06 Fri 19:02> - View external documentation - To open your browser with documentation for the element at the editor's caret, press Shift+F1 (View | External Documentation). You must have the path to your browser set in the File | Settings | Web Browsers options and paths to documentation files added to your project (File | Project Structure...) to use this feature.
*** ABOUT  - <2020-03-02 Mon 11:17> - debugging - the debug window shows up in the bottom set of windows. There is a funny little icon on the right to looks like the MS windows icon sort of, click that and it shows the verious things youcan view in this window.
*** HOWTO  - <2020-02-28 Fri 17:09> - Choose which device to run an app on: Run / Select Device .
*** ABOUT  - <2020-02-27 Thu 12:23> - Examples from File / New / Import sample - pops up a searchable sample browser.
*** HOWTO  - <2020-02-28 Fri 11:03> - File / Project Structure - reveals a lot of settings, including sdk version, Gradle version, Gradle plugin version and Gradle version. 
***** HOWTO  -  <2019-02-22 Fri 15:48> - Easy way to change API level and Java version, right click in the Project view with the Project View set to Android, choose "Open module settings", change the ADK platform and apply. - - 
*** HOWTO - <2019-02-22 Fri 10:15> - Get the "select deployment target" window to show up if it doesn't when you go to run or debug - Run/Edit Configurations/Target drop down, there are options.
*** HOWTO - <2019-02-22 Fri 10:18> - Select a certain activity to run when deploying, use the menu Run/Edit Configurations. 
*** CHECK - <2019-02-20 Wed 09:35> - Using the logcat window is very useful for finding things that are causing a program not to work when the debugger can't catch them.
*** ABOUT - <2019-01-26 Sat 15:30> - Code folding, like hiding, showing imports, function definitions, etc. C-- and C-+ do the job.
*** ENTRY - <2019-01-24 Thu 15:19> - The android sdk is at /home/rick/Android/Sdk
*** ABOUT - <2017-03-29 Wed 14:04> - Added this line to ~/.gradle/gradle.properties: org.gradle.jvmargs=-Xmx1536M . This is to up the memory to enable fast run.
*** ABOUT - <2017-03-29 Wed 14:05> - Views - can get quick documentation, full screen, etc. :views:
***** HOWTO - <2017-03-29 Wed 14:08> - Get out of full screen mode - move the mouse up to the top of the screen, the menu will appear. Click the double arrows on the right corner.
*** ABOUT - <2017-03-29 Wed 13:36> - The version of the compileSDKVersion and the buildToolsVersion is found in the app/build.gradle. Not the top level build.gradle
*** ABOUT - <2017-03-25 Sat 14:24> - Way too complicated, way too controlling, and generally a big pain in the ass. Google sucks. It truly is a big bag of shit, but it's the only game in town right now. Sort of like windows before linux distros really got going.
*** FINISHED - <2017-03-27 Mon 18:48>- <2017-03-27 Mon 11:50> - curl -O studio did it. https://dl.google.com/android/repository/build-tools_r25.0.2-linux.zip if the sudio can't do it. - 
*** ENTRY - <2019-01-26 Sat 11:07> - /dev/kvm keeps coming up and I keep resetting it so I have permissions. BUT, from the web, this advice:
***** ENTRY - <2019-01-26 Sat 11:08> - you need to first sudo apt install qemu-kvm. To check the ownership of /dev/kvm use ls -al /dev/kvm The user was root, the group kvm. To check which users are in the kvm group, use grep kvm /etc/group. To add yourself to the kvm group, you could use sudo adduser rick kvm
*** ABOUT - <2020-02-26 Wed 13:05>  - gradle -                     :GRADLE:
***** UPDATE  - <2020-07-25 Sat 12:08> - /home/rick/.gradle/wrapper/dists
***** HOWTO - <2017-03-25 Sat 18:39> - How to set up gradle to avoid going to the net for its zip file. In other words, point to the local gradles installed already. Note that the below allowed AndroidStudio to create the whole project, then shut it down to make the changes listed below. - Tested this with /share/AndroidProjects/OneMoreTime on my 10" tablet, which is Android 4.2, the earliest I have. -
******* FINISHED - <2017-03-26 Sun 18:23> - Just put the relevant gradle zip in the wrapper directory and set the wrapper properties to point to it. Here's an example:
********* 1 - <2017-03-25 Sat 18:25> - the gradle zip is in the wrapper directory: /share/AndroidProjects/OneMoreTime/gradle/wrapper/gradle-2.14.1-all.zip
*********** NOTE  - <2020-02-26 Wed 13:13> - Currently upgrading to Gradle 6.2.1. Have it downloaded and installed locally and moved the zip to ~/AndroidStudioProjects/MyApplication/gradle/wrapper/gradle-wrapper.properties
********* 2 - <2017-03-25 Sat 18:26> - The  gradle-wrapper.properties file has been changed to point to the local copy: distributionUrl=gradle-2.14.1-all.zip
*********** NOTE  - <2020-02-26 Wed 13:15> - local copy needs to be planted for every android project to avoid downloading? Are these cached once downloaded?
***** FINISHED - <2017-03-26 Sun 16:46>- <2017-03-25 Sat 10:50> - Key was to change values in the build.gradle scripts in root directory and app directory. And the value for distributionUrl in gradle-wrapper.properties. Actually using Gradle 3.4.1. Using the app ~/AndroidStudioProjects/MyFirstApp/ to proble this whole issue. Note the file ~/AndroidStudioProjects/MyFirstApp/gradle/wrapper/gradle-wrapper.properties has entries that have to do with the "avoid download" issue. running - 
******* ~/AndroidStudioProjects/MyFirstApp $ ./gradlew tasks
******* and changing exec to echo, lets me see things as they exist when gradlew is run. Running it in the current state causes it to execute
******* Downloading https://services.gradle.org/distributions/gradle-2.14.1-all.zip
******* 
*** ABOUT - <2017-03-24 Fri 18:10>- <2017-03-23 Thu 13:16> - Where is the maven like file storage area where library etc. jar files and other artifacte files stored? Seems that they are stored in /share/android-studio/gradle/m2repository/ maven is a whole nother ball of wax. :repository:
*** QUESTION - <2017-03-24 Fri 18:10> - what is a classpath dependency in gradle?
***** UPDATE - <2017-03-26 Sun 14:45> - It is used to install the Android Plugin for Gradle stuff, which extends the vanilla Gradle. As of today, it should be set to 2.2.3. According to table at https://developer.android.com/studio/releases/gradle-plugin.html the plugin should be at 2.3+ for gradle 3.3+. The table at that site lists the versions of the plugin to use with various versions of Gradle.

*** HOWTO - <2017-03-23 Thu 13:53> - Use the local gradle rather than the "default gradle wrapper" - Tools/Settings/Build,Execution,Deployment and set to use local gradle distribution.
*** REFERENCES - <2017-03-23 Thu 13:18> - ~/share/EBooks/Android/AndroidStudioDevelopmentEssentialsAndroid6 - http://localhost/Meet%20Android%20Studio%20%7c%20Android%20Studio.html
***** NOTE - <2017-03-06 Mon 18:17> - Book rcmd v1.5, using 2.2.3. May need to download older version?
***** NOTE - <2017-03-06 Mon 18:20> - Tools/Android/SDK Manager is how it's invoked.
***** NOTE - <2017-03-06 Mon 18:15> - Downloaded sample code in /share/zips/AndroidStudioBook.zip

*** UPDATE  - <2020-02-23 Sun 10:19>- <2017-02-26 Sun 12:42> - Set font sizes and other stuff: File/Settings/Editor/Font Colors&Fonts, for Keys, File/Settings/Keymap. Also Appearance may have more to do with Studio elements. - 
*** UPDATE - <2017-02-25 Sat 10:47> - Am using it to build tutorial at developer.android.com, see below
***** UPDATE - <2017-02-26 Sun 12:12>- <2017-02-24 Fri 16:02> - I downloaded the Android Documentation via andriod sdk (just type android at $). It only was under Android 7.0 (API 24) in the stand alone sdk manager, it was listed also in Studio from Tools/Android/SDK Manager, which has a very different interface from the stand alone. In the Studio its listed under SDK Tools tab. The documentation downloaded has this course in it, so  using local copy at file:///share/android-sdk-linux/docs/training/basics/firstapp/index.html which is a tutorial to create 1st app. -
******* NOTE - <2017-02-26 Sun 12:28> - There is a menu on the local copy which allows you to go to any page in the tutorial.


* ABOUT - <2017-02-24 Fri 15:22> - The android development environment  :SDK:
*** NOTE - <2017-02-24 Fri 15:23> - Android SDK (/share/android-sdk-linux/)
*** COMMANDS - <2017-02-24 Fri 15:24> - android - at command line, brings up the Android SDK manager.This lets you install the various android development pieces.
***** android help - this gives more info on use of android command.
***** android avd - android virtual device manager - create virtual android devices.
*** UPDATE - <2017-02-25 Sat 10:51> - Installing Sources for Android 22 (sources;android-22) and Android SDK Platform 22 (platforms;android-22) from AndroidStudio, for the ZTE Avis Model Z828 which is Android 5.1.1 Lollipop



* TODO - <2017-02-24 Fri 15:20> - Get a OsmAnd built.                :OsmAnd:


* TODO - <2016-09-13 Tue 17:00> - how to do a android system backup?
*** CHECK - <2019-02-06 Wed 17:15> - to backup:
#+begin_src shell
adb backup -apk -shared -all -f ~/rca11backup.ab # the RCA11 has very restrictive policies. Probably have to root it to bck it up.
adb restore rca11backup.ab # never got to this because of the RCA bullshit.
#+end_src

*** REFERENCES - <2016-09-13 Tue 17:00> - http://trendblog.net/android-guide-make-nandroid-backup-android-phone/ http://www.techrepublic.com/article/how-to-create-a-full-backup-of-your-android-device-without-root/ http://www.makeuseof.com/tag/what-is-a-nandroid-backup-and-how-exactly-does-it-work/ https://tektab.com/2015/10/31/android-bootloaderfastboot-mode-and-recovery-mode-explained/

* TODO - <2016-09-13 Tue 14:48> - adb - debugger               :adb:debugger:
*** HOWTO - <2019-02-14 Thu 16:26> - Get at the Sqlite dbs in an app - in Android Studio - connect to AVD (or rooted phone), start terminal and run *adb -e shell* to connect with the emulator if using an emulator. browse to /data/data/app.name/databases, do sqlite3 dbname and check tables with .tables, etc...
*** HOWTO - <2017-04-07 Fri 17:18> - Get a successful adb connection to the RCA11. Setup the ~/.android/adb_usb.ini with the full idVendor which is 0x1914. Don't leave out the 0x. I have both the RCA10 andRCA11 in there now. This is only necessary with unrecognized devices. The ZTE Avis phone doesn't seem to need an entry.
#+begin_src shell
adb shell   #and you're in the root dir of device.
#+end_src
***** NOTE - <2018-04-07 Sat 10:33> - For the RCA10 idVendor is 0x2207
*** CHECK - <2017-03-23 Thu 16:11> - Cool little script to capture screen of android device.
$ adb shell screencap /sdcard/screen.png
$ adb pull /sdcard/screen.png 
*** REFERENCES - <2016-09-13 Tue 14:49> - https://developer.android.com/studio/command-line/adb.html
*** HOWTO - <2016-09-13 Tue 15:16> - create the capacity on the android device to use adb, go into Settings/About Phone/ and tap Build Number 7 times. This will make you a developer and create a Developers Options item in the Settings screen.
*** FINISHED - <2016-11-30 Wed 14:47>- <2016-11-29 Tue 19:04> - I'm up to finding the adb_usb.ini after following http://ryancuda.blogspot.com/2013/12/how-to-get-working-adb-drivers-for.html "How to get working ADB drivers for unrecognized Android devices". Using this first to set up RCA RCT6103W46 10"  Tablet.
***** ABOUT - <2016-11-30 Wed 14:47> - Using the site above, followed these steps.
******* 1 - <2016-11-30 Wed 14:48> - Turned on developer options on 10" RCA by repeatedly tapping build number in Settings - System - About tablet. Then the Developer menu appears under System in Settings app. Checked "USB Debugging".
******* 2 - <2016-11-30 Wed 14:53> - Executed lsusb -vv and found the relevant device. This output a lot of info, See file /share/notes/lsusb112916. The number needed is called "idVendor"in the output of lsusb -vv, in the article he refers to it as device ID.
******* UPDATE - <2017-03-23 Thu 15:52>- <2016-11-30 Wed 14:58> - Execute "android update adb"; only if you don't already have an ~/.android/adb_usb.ini. "android update adb" creates a new ~/.android/adb_usb.ini, losing the contents of it. Edit that file adding the idVendor from step 2 at the end of the file. - 
********* NOTE - <2016-11-30 Wed 15:04>Note that I downloaded the whole android sdk from https://developer.android.com/studio/index.html#downloads. I also downloaded the Android Studio from there, but haven't played with it
******* 4 - <2016-11-30 Wed 15:04> - Run "adb kill-server" then "adb devices". This worked, the last command returned the serial number of my device, thus adb sees it.



* ABOUT - <2015-11-02 Mon 12:03> - RCA RCT6103W46 10"  Tablet with wireless keyboard
*** REFERENCES - <2016-09-13 Tue 17:02> - Rooting https://www.google.com/search?num=100&newwindow=1&client=ubuntu&hs=Rsy&channel=fs&q=rca+rct6103w46+10%22+root&oq=rca+rct6103w46+10%22+root&gs_l=serp.3..33i160k1.1965803.1968030.0.1969068.4.4.0.0.0.0.277.277.2-1.1.0....0...1.1.64.serp..3.1.276.0zwuD4u3AC4
*** HOWTO - <2016-08-31 Wed 15:25> - Get into recovery mode - hold power-on and volume-down buttons until dogs appear. Then keep holding the volume down button. After the android icon appears, use volume-up and volume down to move through menu, power-on to select. https://youtu.be/N-6yvjgR06Y , 
*** FINISHED - <2016-08-31 Wed 12:06>- <2015-11-02 Mon 12:05> - Fix the broken glass. Seems the underneath is fine, bought the little tools, watch 2 videos -/Video/RCA Tablet Glass DigitizerTouchscreen Replacement - Disassembly (Low).mp4 and other one. Got the glass in and is working well.
***** HOWTO - <2015-11-02 Mon 12:24> - Turn it off with a broken screen - press and hold the power button as usual, with keyboard attached, now your in a selectin mode where you can use the arrow keys to move, and enter to select.
***** /Video/RCA Tablet Glass DigitizerTouchscreen Replacement - Disassembly (Low).mp4
***** /Video/RCA Tablet Glass DigitizerTouchscreen Replacement - Reassembly (Low).webm


* ABOUT - <2016-08-31 Wed 12:08> - ZTE Avid Plus phone, T-mobile account, $95/mo for 14Gb hotspot or tethered, and unlimited data on phone itself. Used it to download over 30Gb of stuff in less than a month.
*** HOWTO - <2016-09-13 Tue 15:20> - send and receive files using adb. What I'm interested in now is the /storage/sdcard1/Flud directory on the sdcard1. used adb shell and poked around the directories until I found it. Then use e.g. adb push uks.mp4 /storage/sdcard1/Flud (in dir where uks.mp4 exists). This is much slower than Nautilus.

* ABOUT - <2016-01-31 Sun 18:21> - The 11" RCA with Android 5. Gps doesn't work. When connecting with USB cable to laptop, pull down the "whats going on" menu, ad check connected to a media device. Touch that and you get a couple of options.
*** HOWTO - <2016-02-01 Mon 14:21> - Get files onto or off it, use a USB drive then esFileExplorer.

* ABOUT - <2016-01-19 Tue 14:09> - HUAWEI-H881C android phone - got it from Carole, JE using for mp3 playing, put a microSD card in it, you have to take off the back to get to it. Manual is downloaded to  /share/EBooks/MANUALS/HUAWEI-H881C-UserGuideEN.pdf

* TODO - <2015-11-12 Thu 12:11> - I busted my irulu xPro1 10" , no os, so am trying to get it back.
*** REFERENCES - <2016-09-13 Tue 14:57> - http://androidforums.com/threads/rca-pro-10-tablet.875260/ and http://forum.xda-developers.com/android/general/firmware-rca-viking-pro-rct6303w87dk-t3325158
*** ABOUT - <2015-11-12 Thu 12:12> - Downloaded adb and fastboot on Ubuntu via apt-get, poking around many sites,
*** QUESTION - <2015-11-12 Thu 12:13> - Can I use fastboot? See http://android.wonderhowto.com/how-to/know-your-android-tools-what-is-fastboot-do-you-use-it-0155640/
*** DID NOT WORK - <2015-11-13 Fri 14:33>- <2015-11-12 Thu 14:51> - The following allowed me to download 360wangpan_setup.exe in zips, but its all in Chinese!
***** Wrote Hello, I did something and I only can boot into recovery mode or fastboot. Is there an image of the ROM that I can download and install? My S/N is X1047JG1503031E1519. Thank you for any help, Rick Charon at https://www.irulu.com/tablet/p-irulu-expro-x1-pro-series-android-4.4-high-speed-octa-core-tablet-16gb-rom-10-points-capacitive-ips-touch-screen-bluetooth-4.2_1023431.html  -
*** CANCELED - <2015-11-13 Fri 14:34> - Looking at installing Ubuntu Touch, following https://developer.ubuntu.com/en/start/ubuntu-for-devices/installing-ubuntu-for-devices/
*** HOWTO - <2015-11-13 Fri 14:48> - Get adb connected = on device, go into the install via adb screen, msg is to send package you want to apply, and from laptop, adb devices shows it there.
*** QUESTION - <2015-11-13 Fri 16:38> - tried adb sideload with zip for nexus, aborted.
*** CHECK - <2015-11-16 Mon 14:08> - Most hopeful solution yet, but looked and not even sure which is the CPU! http://www.blogtechtips.com/2015/01/01/find-chinese-tablet-firmware-flash-file-using-board-id/
http://www.blogtechtips.com/2014/08/13/tablet-stuck-on-android-screen-fix/ is also interesting.
*** CHECK - <2015-11-18 Wed 17:37>https://code.google.com/p/android-roms/wiki/Install_Custom_ROM - Is this possible.
*** CHECK - <2015-11-18 Wed 17:40> - Instructions: How to use “adb sideload” in Linux --  https://code.google.com/p/android-roms/wiki/Install_Custom_ROM



* REDO - <2015-09-13 Sun 17:11> - I was installing the android source from https://source.android.com/source/downloading.html, decided to hold off, 
CLOSED: [2015-09-13 Sun 17:11]

* HOWTO - <2015-09-12 Sat 16:44> - Set up debugging mode on an android device:
*** 1.   Open up your device’s “Settings”. This can be done by pressing the Menu button while on your home screen and tapping “System settings”
*** 2.  Now scroll to the bottom and tap “About phone” or “About tablet”.  At the “About” screen, scroll to the bottom and tap on “Build number” seven times.  Make sure you tap seven times. If you see a “Not need, you are already a developer!” message pop up, then you know you have done it correctly.
***** UPDATE  - <2020-02-28 Fri 17:12> - The build number is one level deeper in the menus, After entering About Phone menu select Software info - the Build number is down in there, and the same 7 taps do the trick.
*** 3. Done! By tapping on “Build number” seven times, you have unlocked USB debugging mode on Android 4.2 and higher. You can now enable/disable it whenever you desire by going to “Settings” -> “Developer Options” -> “Debugging” ->” USB debugging”.

* TODO - <2015-09-11 Fri 19:03> - Get into it, the programming and control. Learn it. Following https://source.android.com/source/initializing.html , have installed the openjdk by :dev:
*** sudo update-alternatives --config java
*** sudo update-alternatives --config javac
*** Think I did what was suggested in https://source.android.com/source/initializing.html, on to https://source.android.com/source/downloading.html
*** UPDATE - <2015-09-12 Sat 16:24> - following along, set up repo in ~/bin/repo. This is a python script "Repo is a tool that makes it easier to work with Git in the context of Android." (from https://source.android.com/source/downloading.html

* HOWTO - <2015-09-01 Tue 08:14> - get the bu353 GPS USB dongle to work: After system start up run PL2303 app. Allow it to take over the GPS function. Then you're ready to go, run Map.Me or other.


* FINISHED - <2016-09-07 Wed 10:25>- <2014-12-15 Mon 17:10> - Get a decent mp3 player setup. Creating and using playlists is important. For doing Spanish going down the road. - WE NOW HAVE ANDROID BLUETOOTH. Game over.
*** NOTE - <2014-12-15 Mon 18:51> - One of the biggest PITA is the tag listing. I use files, and want file names. Found 2 apps that play directories directly, trying them. 

* ABOUT - <2014-10-02 Thu 22:54> - Dropbox on RCA Android device from Xubuntu, Choose export to save a file to the android disk. Favorite doesn't do it.


* ABOUT - <2014-10-02 Thu 22:55> The MTP protocol, -
*** NOTE - <2016-09-08 Thu 11:22> With the ZTE Avis Plus Z828 phone plugged in and MTP connection chosen on the phone, mount point is /run/user/1000/gvfs/ , in that directory there is a file called mtp:gooble-gooble. that's the android file system. 
